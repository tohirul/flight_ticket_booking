generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["prismaSchemaFolder"]
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Country {
  id          String    @id @default(uuid())
  name        String
  countryCode String    @unique
  airlines    Airline[]
  airports    Airport[]
  cities      City[]
}

model City {
  id        String    @id @default(cuid())
  name      String
  state     String?
  province  String?
  country   Country   @relation(fields: [countryId], references: [id])
  countryId String
  airports  Airport[]

  @@index([name, countryId])
}

model Airline {
  id        String     @id @default(uuid())
  name      String
  country   Country    @relation(fields: [countryId], references: [id])
  countryId String
  logo      String
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt
  planes    Airplane[]
  flights   Flight[]

  @@index([countryId])
}

enum AirplaneFuelType {
  JetFuel
  Avgas
  Diesel
}

enum AirplaneEngineType {
  JetEngine
  Turboprop
  PistonEngine
  RocketEngine
}

enum AirplaneEngineConfiguration {
  SingleEngine
  TwinEngine
  TriEngine
  QuadEngine
}

model Airplane {
  id                  String                      @id @default(uuid())
  model               String
  year                Int
  seats               Int
  capacity            Int
  manufacturer        String
  engines             Int
  engineType          AirplaneEngineType
  engineConfiguration AirplaneEngineConfiguration
  speed               Int
  fuelType            AirplaneFuelType
  createdAt           DateTime                    @default(now())
  updatedAt           DateTime                    @updatedAt
  airline             Airline                     @relation(fields: [airlineId], references: [id], onDelete: Cascade)
  airlineId           String
  flights             Flight[]

  @@index([airlineId])
}

model Airport {
  id        String   @id @default(cuid())
  name      String
  code      String   @unique
  city      City     @relation(fields: [cityId], references: [id])
  cityId    String
  lat       Float
  lng       Float
  timezone  String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  Country   Country? @relation(fields: [countryId], references: [id])
  countryId String?
}

model Flight {
  id         String    @id @default(uuid())
  airline    Airline?  @relation(fields: [airlineId], references: [id])
  airlineId  String?
  airplane   Airplane? @relation(fields: [airplaneId], references: [id])
  airplaneId String?

  @@index([airlineId])
  @@index([airplaneId])
}

model Passenger {
  id                  String   @id @default(uuid())
  firstName           String
  lastName            String
  email               String   @unique
  phone               String   @unique
  dateOfBirth         DateTime
  gender              String?
  nationality         String?
  passportNumber      String?
  address             String?
  emergencyContact    String?
  emergencyPhone      String?
  frequentFlyer       Boolean  @default(false)
  mealPreference      String?
  specialRequirements String?
  bookingDate         DateTime @default(now())
  createdAt           DateTime @default(now())
  updatedAt           DateTime @updatedAt
}
